parameters:
- name: name
  displayName: Name
  type: string
  default: toolsContainer
- name: dependsOn
  type: object
  default: null
- name: displayName
  displayName: Display Name
  type: string
  default: Tools container info
- name: imageTag
  displayName: Image tag
  type: string
  default: latest
- name: azureServiceConnection
  displayName: Azure Service Connection
  type: string
  default: my-azure-subscription

jobs:
- job: ${{ parameters.name }}
  dependsOn: ${{ parameters.dependsOn }}
  displayName: ${{ parameters.displayName }}
  variables:
  - group: 'build-container-agent-image' # shared with deploy-container-agents.yml
  # should contain 'containerRegistry', 'containerRegistryConnection' -> name of Container Registry Service Connection
  - name: 'toolsImageFQName'
    value: $(containerRegistry).azurecr.io/pipelineagent/ubuntu-agent-tools:${{ parameters.imageTag }}
  pool:
    name: $[ coalesce(variables.pool,'Azure Pipelines') ]
    vmImage: $[ coalesce(variables.vmImage,'ubuntu-latest') ]
  container:
    image: $(toolsImageFQName)
    endpoint: ${{ coalesce(variables.containerEndpoint,'containerEndpoint') }}
  steps:
  - bash: |
      echo Hello from Ubuntu
      lsb_release -d
    displayName: 'bash: Ubuntu info'
  - bash: |
      apt-get install -y -qq --no-install-recommends \
        apt-transport-https \
        apt-utils \
        ca-certificates \
        curl \
        git \
        iputils-ping \
        jq \
        lsb-release \
        software-properties-common \
        wget
      apt -y install unzip lsb-release
      # lsb_release -a
      cat /etc/os-release
      add-apt-repository ppa:deadsnakes/ppa
      apt update
      apt -y install python3.11
      # echo Azure Function Core Tools $(func --version)
      python --version
    displayName: 'bash: Root stuff'
  - pwsh: |
      Write-Host "`$PSVersionTable.OS"
      $PSVersionTable.OS
      Get-InstalledModule | Sort-Object -Property Name
    displayName: 'pwsh: PowerShell info'
  - task: AzureCLI@2
    inputs:
      azureSubscription: '${{ parameters.azureServiceConnection }}'
      failOnStandardError: true
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: az -v
  - task: AzurePowerShell@5
    inputs:
      azurePowerShellVersion: 'latestVersion'
      azureSubscription: '${{ parameters.azureServiceConnection }}'
      failOnStandardError: true
      inline: |
        Get-AzContext Format-List
        Get-AzContext | Select-Object -ExpandProperty Subscription | Format-List
      scriptType: inlineScript
  - pwsh: go version
    displayName: 'go lang version'
  - pwsh: terraform -v
    displayName: 'Terraform version'
